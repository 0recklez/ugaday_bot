import random

from aiogram import Bot, Dispatcher, F
from aiogram.filters import Command, CommandStart
from aiogram.types import Message
from config import Config, load_config

config: Config = load_config()
BOT_TOKEN: str = config.tg_bot.token

bot = Bot(BOT_TOKEN)
dp = Dispatcher()

ATTEMPTS = 7

user = {'in_game': False,
        'secret_number': 0,
        'attempts': 0,
        'total_games': 0,
        'wins': 0,
        'in_game_cube': False}


def get_random_number() -> int:
    return random.randint(1, 100)


@dp.message(CommandStart())
async def process_start_command(message: Message):
    await message.answer(
        '–ø—Ä–∏–≤–µ—Ç!\n—Å—ã–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É "—É–≥–∞–¥–∞–π —á–∏—Å–ª–æ"?\n\n'
        '—á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã –∏ —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö '
        '–∫–æ–º–∞–Ω–¥ - –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /help')


@dp.message(Command(commands='help'))
async def process_help_command(message: Message):
    await message.answer('–ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:\n\n—è –∑–∞–≥–∞–¥—ã–≤–∞—é —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100, '
                         f'–∞ –≤–∞–º –Ω—É–∂–Ω–æ –µ–≥–æ —É–≥–∞–¥–∞—Ç—å\n—É –≤–∞—Å –µ—Å—Ç—å {ATTEMPTS} '
                         '–ø–æ–ø—ã—Ç–æ–∫\n\n–¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/help - –ø—Ä–∞–≤–∏–ª–∞ '
                         '–∏–≥—Ä—ã –∏ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n/cancel - –≤—ã–π—Ç–∏ –∏–∑ –∏–≥—Ä—ã\n'
                         '/stats - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n'
                         '/cube - –∫–∏–Ω—É—Ç—å –∫—É–±–∏–∫\n\n'
                         '–Ω—É —á—Ç–æ —Å—ã–≥—Ä–∞–µ–º?(–Ω–∞–ø–∏—à–∏ –¥–∞)')


@dp.message(Command(commands='stats'))
async def process_stat_command(message: Message):
    await message.answer(f'–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ(—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Å–µ—Ö –∏–≥—Ä –≤ –±–æ—Ç–µ) '
                         f'–≤—Å–µ–≥–æ –∏–≥—Ä —Å—ã–≥—Ä–∞–Ω–æ: {user["total_games"]}\n'
                         f'–ø–æ–±–µ–¥: {user["wins"]}')


@dp.message(Command(commands='cancel'))
async def process_cancel_command(message: Message):
    if user['in_game']:
        user['in_game'] = False
        await message.answer('–≤—ã –≤—ã—à–ª–∏ –∏–∑ –∏–≥—Ä—ã')
    else:
        await message.answer('–≤—ã –∏ —Ç–∞–∫ –Ω–µ –∏–≥—Ä–∞–µ—Ç–µ')


@dp.message(Command(commands='cube'))
async def process_cube_answer(message: Message):
    user["in_game_cube"] = True
    await message.answer('–ø–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å –∫–∞–∫–∞—è —Ü–∏—Ñ—Ä–∞ –≤—ã–ø–∞–¥–µ—Ç')


@dp.message(F.text.lower().in_(['–¥–∞', '–¥–∞–≤–∞–π', '—Å—ã–≥—Ä–∞–µ–º', '–∏–≥—Ä–∞',
                                '–∏–≥—Ä–∞—Ç—å', '—Ö–æ—á—É –∏–≥—Ä–∞—Ç—å']))
async def process_positive_answer(message: Message):
    if not user["in_game"]:
        user["in_game"] = True
        user["secret_number"] = get_random_number()
        user["attempts"] = ATTEMPTS
        await message.answer('–∏–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!\n'
                             '—è –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100\n'
                             f'–ø–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å –µ–≥–æ –∑–∞ {ATTEMPTS} –ø–æ–ø—ã—Ç–æ–∫')
    else:
        await message.answer('–∏–≥—Ä–∞ —É–∂–µ –∏–¥–µ—Ç')


@dp.message(F.text.lower().in_(['–Ω–µ—Ç', '–Ω–µ', '–Ω–µ —Ö–æ—á—É', '–Ω–µ –±—É–¥—É']))
async def process_negative_answer(message: Message):
    if not user["in_game"]:
        await message.answer('–µ—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –ø–æ–∏–≥—Ä–∞—Ç—å –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–º')
    else:
        await message.answer('—Å–µ–π—á–∞—Å –∂–µ –∏–¥–µ—Ç –∏–≥—Ä–∞, —É–≥–∞–¥–∞–π—Ç–µ —á–∏—Å–ª–æ')


@dp.message(lambda x: x.text and x.text.isdigit() and 1 <= int(x.text) <= 7 and user["in_game_cube"])
async def process_cube_answer(message: Message):
    msg = await message.answer_dice()
    user["in_game_cube"] = False
    if msg.dice.value == int(message.text):
        user["total_games"] += 1
        user["wins"] += 1
        await message.answer('–≤—ã —É–≥–∞–¥–∞–ª–∏!')
    else:
        await message.answer('–≤—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏(')


@dp.message(lambda x: x.text and x.text.isdigit() and 1 <= int(x.text) <= 100)
async def process_number_answer(message: Message):
    if user["in_game"]:
        if int(message.text) == user["secret_number"]:
            user["in_game"] = False
            user["total_games"] += 1
            user["wins"] += 1
            await message.answer("ü•≥ü•≥ü•≥\n–≤—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ, —Å—ã–≥—Ä–∞–µ–º –µ—â–µ —Ä–∞–∑?")
        elif int(message.text) > user["secret_number"]:
            user["attempts"] -= 1
            await message.answer('–º–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ')
        elif int(message.text) < user["secret_number"]:
            user["attempts"] -= 1
            await message.answer('–º–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ')
        if user["attempts"] == 0:
            user["in_game"] = False
            user["total_games"] += 1
            await message.answer('üò≠üò≠üò≠\n'
                                 f'–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏, –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±—ã–ª–æ {user["secret_number"]}\n'
                                 f'—Å—ã–≥—Ä–∞–µ–º –µ—â–µ —Ä–∞–∑?')
    else:
        await message.answer("–º—ã –µ—â–µ –Ω–µ –∏–≥—Ä–∞–µ–º, —Ö–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å?")


@dp.message()
async def process_other_answers(message: Message):
    if user["in_game"]:
        await message.answer("–≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100")
    else:
        await message.answer('—è –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é\n'
                             '—á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∏ –∫–æ–º–∞–Ω–¥—ã –≤–≤–µ–¥–∏—Ç–µ /help')


dp.run_polling(bot)
